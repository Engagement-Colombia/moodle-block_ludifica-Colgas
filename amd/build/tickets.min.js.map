{"version":3,"file":"tickets.min.js","sources":["../src/tickets.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to tickets manage.\n *\n * @module    block/ludifica\n * @copyright 2021 David Herney @ BambuCo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'block_ludifica/alertc',\n        'block_ludifica/player',\n        'core/modal_factory',\n        'core/log'],\nfunction($,\n        Notification,\n        Str,\n        Ajax,\n        Alertc,\n        Player,\n        ModalFactory,\n        Log) {\n\n    var s = [];\n    var contacts = null;\n\n    /**\n     * Show the give view.\n     *\n     * @param {Integer} ticketid\n     */\n    function giveView(ticketid) {\n\n        var $content = $('<div></div>');\n        var $contactslist = $('<select id=\"block_ludifica_ticket_given_contact\" class=\"form-control\"></select>');\n\n        $content.append('<h4>' + s.giveticketmessage + '</h4>');\n\n        contacts.forEach(contact => {\n            $contactslist.append('<option value=\"' + contact.id + '\">' + contact.name + '</option>');\n        });\n\n        $content.append($contactslist);\n\n        Notification.confirm(s.giveticket, $content.html(), s.give, s.cancel, function() {\n            var contactid = parseInt($('#block_ludifica_ticket_given_contact').val());\n\n            // Buy the ticket.\n            Ajax.call([{\n                methodname: 'block_ludifica_give_ticket',\n                args: {'ticketid': ticketid, 'contactid': contactid},\n                done: function(data) {\n\n                    if (data) {\n                        Alertc.success(s.given);\n                        updateTicketData(ticketid);\n                    } else {\n                        Alertc.error(s.notgive);\n                    }\n\n                },\n                fail: function(e) {\n                    Alertc.error(e.message);\n                    Log.debug(e);\n                }\n            }]);\n\n        });\n    }\n\n    /**\n     * Save the ticket data.\n     *\n     * @param {Integer} ticketid\n     */\n    function updateTicketData(ticketid) {\n        Ajax.call([{\n            methodname: 'block_ludifica_get_ticket',\n            args: {'id': ticketid},\n            done: function(data) {\n\n                if (data && typeof data == 'object') {\n                    var $ticket = $('#ticket-' + ticketid);\n                    var $usertickets = $('#moreinfo-ticket-content-' + ticketid + ' .usertickets');\n                    var $userticketslist = $usertickets.find('ul');\n                    var userticketsavailable = 0;\n\n                    $ticket.find('val[key=\"available\"]').html(data.available);\n                    $ticket.find('val[key=\"usertickets\"]').html(data.usertickets.length);\n\n                    $userticketslist.empty();\n                    if (data.usertickets.length > 0) {\n                        $ticket.find('[data-action=\"give\"]').show();\n                        $usertickets.show();\n\n                        data.usertickets.forEach(one => {\n                            var $tplitem = $('<li class=\"list-group-item\"></li>');\n                            var $tplusercode = $('<span class=\"usercode\">' + one.usercode + ' </span>');\n\n                            $tplitem.append($tplusercode);\n\n                            if (one.timeused) {\n                                $tplusercode.addClass('usercode-used');\n\n                                var userdate = s.usedat.replace('USERDATE', one.timeusedformatted);\n                                var $tpltimeused = $('<em> ' + userdate + '</em>');\n                                $tplitem.append($tpltimeused);\n                            }\n\n                            $userticketslist.append($tplitem);\n                            if (!one.timeused) {\n                                userticketsavailable++;\n                            }\n                        });\n                    } else {\n                        $usertickets.hide();\n                    }\n\n                    if (userticketsavailable == 0) {\n                        $ticket.find('[data-action=\"give\"]').hide();\n                    }\n\n                    if (data.available <= 0 || data.byuser <= data.usertickets.length) {\n                        $ticket.find('[data-action=\"buy\"]').hide();\n                    } else {\n                        $ticket.find('[data-action=\"buy\"]').show();\n                    }\n                }\n            },\n            fail: function(e) {\n                Log.debug(e);\n            }\n        }]);\n    }\n\n    /**\n     * Initialise all for tickets.\n     *\n     * @param {Integer} userid\n     *\n     */\n    var init = function(userid) {\n\n        // Load used strings.\n        var strings = [\n            {key: 'buyticket', component: 'block_ludifica'},\n            {key: 'buyticketmessage', component: 'block_ludifica'},\n            {key: 'buy', component: 'block_ludifica'},\n            {key: 'notbuy', component: 'block_ludifica'},\n            {key: 'give', component: 'block_ludifica'},\n            {key: 'given', component: 'block_ludifica'},\n            {key: 'notgive', component: 'block_ludifica'},\n            {key: 'giveticket', component: 'block_ludifica'},\n            {key: 'giveticketmessage', component: 'block_ludifica'},\n            {key: 'notcontacts', component: 'block_ludifica'},\n            {key: 'bought', component: 'block_ludifica'},\n            {key: 'usedat', component: 'block_ludifica', param: 'USERDATE'},\n            {key: 'cancel'},\n            {key: 'continue'},\n            {key: 'error'},\n            {key: 'info'},\n        ];\n        strings.forEach(function(one) {\n            s[one.key] = one.key;\n        });\n\n        Str.get_strings(strings).then(function(results) {\n            results.forEach(function(value, index) {\n                s[strings[index].key] = value;\n            }).\n            fail(function(e) {\n                Log.debug('Error loading strings');\n                Log.debug(e);\n            });\n\n            return true;\n        });\n        // End load used strings.\n\n        // Buy.\n        $('[data-action=\"buy\"]').on('click', function() {\n            var $element = $(this);\n            var ticketid = $element.data('id');\n\n            Notification.confirm(s.buyticket, s.buyticketmessage, s.buy, s.cancel, function() {\n\n                // Buy the ticket.\n                Ajax.call([{\n                    methodname: 'block_ludifica_buy_ticket',\n                    args: {'id': ticketid},\n                    done: function(data) {\n\n                        if (data) {\n                            Alertc.success(s.bought);\n                            updateTicketData(ticketid);\n                            Player.reloadStats();\n                        } else {\n                            Alertc.error(s.notbuy);\n                        }\n\n                    },\n                    fail: function(e) {\n                        Log.debug('Error buy ticket');\n                        Log.debug(e);\n                    }\n                }]);\n\n            });\n\n        });\n\n        // Give a ticket.\n        $('[data-action=\"give\"]').on('click', function() {\n            var $element = $(this);\n            var ticketid = $element.data('id');\n\n            // Request the user contacts list.\n            if (!contacts) {\n                Ajax.call([{\n                    methodname: 'core_message_get_user_contacts',\n                    args: {'userid': userid},\n                    done: function(data) {\n\n                        if (data && typeof data == 'object' && data.length > 0) {\n\n                            contacts = [];\n                            data.forEach(contact => {\n                                if (!contact.isdeleted && !contact.isblocked && contact.iscontact) {\n                                    contacts.push({'name': contact.fullname, 'id': contact.id});\n                                }\n                            });\n\n                            giveView(ticketid);\n\n                        } else {\n                            Alertc.warning(s.notcontacts);\n                        }\n\n                    },\n                    fail: function(e) {\n                        Alertc.error(e.message);\n                        Log.debug(e);\n                    }\n                }]);\n            } else {\n                giveView(ticketid);\n            }\n\n        });\n\n        // More info.\n        $('[data-action=\"showmore\"]').on('click', function() {\n            var $element = $(this);\n            var ticketid = $element.data('id');\n            var $more = $('#moreinfo-ticket-' + ticketid);\n            var props = {\n                title: $more.attr('title'),\n                body: $more.html()\n            };\n\n            ModalFactory.create(props).then(function(modal) {\n                modal.show();\n                return true;\n            }).\n            fail(function(e) {\n                Log.debug('Error creating modal showmore');\n                Log.debug(e);\n            });\n\n        });\n\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Notification","Str","Ajax","Alertc","Player","ModalFactory","Log","s","contacts","giveView","ticketid","$content","$contactslist","append","giveticketmessage","forEach","contact","id","name","confirm","giveticket","html","give","cancel","contactid","parseInt","val","call","methodname","args","done","data","success","given","updateTicketData","error","notgive","fail","e","message","debug","_typeof","$ticket","$usertickets","$userticketslist","find","userticketsavailable","available","usertickets","length","empty","show","one","$tplitem","$tplusercode","usercode","timeused","addClass","userdate","usedat","replace","timeusedformatted","$tpltimeused","hide","byuser","init","userid","strings","key","component","param","get_strings","then","results","value","index","on","this","buyticket","buyticketmessage","buy","bought","reloadStats","notbuy","isdeleted","isblocked","iscontact","push","fullname","warning","notcontacts","$more","props","title","attr","body","create","modal"],"mappings":"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"}