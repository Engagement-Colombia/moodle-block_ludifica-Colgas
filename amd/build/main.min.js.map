{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the block.\n *\n * @module    block/ludifica\n * @copyright 2021 David Herney @ BambuCo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'block_ludifica/alertc'],\nfunction($, ModalFactory, Alertc) {\n\n    // Based in https://philipwalton.com/articles/responsive-components-a-solution-to-the-container-queries-problem/\n    var resizeobserver = function() {\n\n        // Find all elements with the `data-observe-resizes` attribute\n        // and start observing them.\n        $('[data-observe-resizes]').each(function() {\n\n            // Only run if ResizeObserver is supported.\n            if ('ResizeObserver' in self) {\n                // Create a single ResizeObserver instance to handle all\n                // container elements. The instance is created with a callback,\n                // which is invoked as soon as an element is observed as well\n                // as any time that element's size changes.\n                let ro = new ResizeObserver(function(entries) {\n\n                    // Default breakpoints that should apply to all observed\n                    // elements that don't define their own custom breakpoints.\n                    var defaultBreakpoints = {XS: 0, SM: 384, MD: 576, LG: 768, XL: 960};\n\n                    entries.forEach(function(entry) {\n\n                        // If breakpoints are defined on the observed element,\n                        // use them. Otherwise use the defaults.\n                        var breakpoints = entry.target.dataset.breakpoints ?\n                            JSON.parse(entry.target.dataset.breakpoints) :\n                            defaultBreakpoints;\n\n                        // Update the matching breakpoints on the observed element.\n                        Object.keys(breakpoints).forEach(function(breakpoint) {\n                            var minWidth = breakpoints[breakpoint];\n                            if (entry.contentRect.width >= minWidth) {\n                                entry.target.classList.add(breakpoint);\n                            } else {\n                                entry.target.classList.remove(breakpoint);\n                            }\n                        });\n                    });\n                });\n\n                ro.observe(this);\n            }\n        });\n    };\n\n    /**\n     * Initialise all for the block.\n     *\n     */\n    var init = function() {\n\n        // Load default controls.\n\n        // Modal.\n        $('.block_ludifica-modal').each(function() {\n            var $element = $(this);\n            var title = $element.attr('title');\n            var props = {\n                title: title || '',\n                body: $element.html()\n            };\n\n            if ($element.find('footer').length > 0) {\n                props.footer = $element.find('footer');\n            }\n\n            if ($element.data('type')) {\n                props.type = $element.data('type');\n            }\n\n            ModalFactory.create(props, $('.block_ludifica-modalcontroller[data-ref-id=\"' + $element.attr('id') + '\"]'));\n        });\n\n        // Tabs.\n        $('.block_ludifica-tabs').each(function() {\n            var $tabs = $(this);\n            var tabslist = [];\n\n            $tabs.find('[data-ref]').each(function() {\n                var $tab = $(this);\n                tabslist.push($tab);\n\n                $tab.on('click', function() {\n                    tabslist.forEach(one => {\n                        $(one.data('ref')).removeClass('active');\n                    });\n\n                    $tabs.find('.active[data-ref]').removeClass('active');\n\n                    $tab.addClass('active');\n                    $($tab.data('ref')).addClass('active');\n                });\n\n            });\n\n        });\n\n        $('body').on('updatefailed', '[data-inplaceeditable]', function(e) {\n            var exception = e.exception; // The exception object returned by the callback.\n            e.preventDefault(); // This will prevent default error dialogue.\n\n            if (exception.errorcode == \"nicknameexists\") {\n                Alertc.error(exception.message);\n\n                // Cleared the error code because the event is twice called.\n                exception.errorcode = null;\n            }\n        });\n\n        resizeobserver();\n\n    };\n\n    $('.openshare').on('click', function() {\n        var $content = $('.share_badge_modal');\n        var $title = $content.attr('title');\n\n        ModalFactory.create({\n          title: $title,\n          body: $content.html()\n        }).then(function(modal) {\n        modal.show();\n        });\n    });\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","ModalFactory","Alertc","on","$content","$title","attr","create","title","body","html","then","modal","show","init","each","$element","this","props","find","length","footer","data","type","$tabs","tabslist","$tab","push","forEach","one","removeClass","addClass","e","exception","preventDefault","errorcode","error","message","self","ResizeObserver","entries","defaultBreakpoints","XS","SM","MD","LG","XL","entry","breakpoints","target","dataset","JSON","parse","Object","keys","breakpoint","minWidth","contentRect","width","classList","add","remove","observe"],"mappings":";;;;;;;AAuBAA,6BAAO,CAAC,SAAU,qBAAsB,0BACxC,SAASC,EAAGC,aAAcC,eAkHtBF,EAAE,cAAcG,GAAG,SAAS,eACpBC,SAAWJ,EAAE,sBACbK,OAASD,SAASE,KAAK,SAE3BL,aAAaM,OAAO,CAClBC,MAAOH,OACPI,KAAML,SAASM,SACdC,MAAK,SAASC,OACjBA,MAAMC,aAIH,CACHC,KA7EO,WAKPd,EAAE,yBAAyBe,MAAK,eACxBC,SAAWhB,EAAEiB,MAEbC,MAAQ,CACRV,MAFQQ,SAASV,KAAK,UAEN,GAChBG,KAAMO,SAASN,QAGfM,SAASG,KAAK,UAAUC,OAAS,IACjCF,MAAMG,OAASL,SAASG,KAAK,WAG7BH,SAASM,KAAK,UACdJ,MAAMK,KAAOP,SAASM,KAAK,SAG/BrB,aAAaM,OAAOW,MAAOlB,EAAE,gDAAkDgB,SAASV,KAAK,MAAQ,UAIzGN,EAAE,wBAAwBe,MAAK,eACvBS,MAAQxB,EAAEiB,MACVQ,SAAW,GAEfD,MAAML,KAAK,cAAcJ,MAAK,eACtBW,KAAO1B,EAAEiB,MACbQ,SAASE,KAAKD,MAEdA,KAAKvB,GAAG,SAAS,WACbsB,SAASG,SAAQ,SAAAC,KACb7B,EAAE6B,IAAIP,KAAK,QAAQQ,YAAY,aAGnCN,MAAML,KAAK,qBAAqBW,YAAY,UAE5CJ,KAAKK,SAAS,UACd/B,EAAE0B,KAAKJ,KAAK,QAAQS,SAAS,mBAOzC/B,EAAE,QAAQG,GAAG,eAAgB,0BAA0B,SAAS6B,OACxDC,UAAYD,EAAEC,UAClBD,EAAEE,iBAEyB,kBAAvBD,UAAUE,YACVjC,OAAOkC,MAAMH,UAAUI,SAGvBJ,UAAUE,UAAY,SAnG9BnC,EAAE,0BAA0Be,MAAK,WAGzB,mBAAoBuB,MAKX,IAAIC,gBAAe,SAASC,aAI7BC,mBAAqB,CAACC,GAAI,EAAGC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAEhEN,QAAQZ,SAAQ,SAASmB,WAIjBC,YAAcD,MAAME,OAAOC,QAAQF,YACnCG,KAAKC,MAAML,MAAME,OAAOC,QAAQF,aAChCP,mBAGJY,OAAOC,KAAKN,aAAapB,SAAQ,SAAS2B,gBAClCC,SAAWR,YAAYO,YACvBR,MAAMU,YAAYC,OAASF,SAC3BT,MAAME,OAAOU,UAAUC,IAAIL,YAE3BR,MAAME,OAAOU,UAAUE,OAAON,qBAM3CO,QAAQ7C"}